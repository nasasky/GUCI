<template>
  <view class="wrap">
    <view class="typewrap">
      <view class="typebar">
        <view class="{{ bill.typeId === '1' ? 'active' : '' }}" @tap="toggleType(1)">
          <text>支出</text>
        </view>
        <view class="{{ bill.typeId === '2' ? 'active' : '' }}" @tap="toggleType(2)">
          <text>收入</text>
        </view>
      </view>
    </view>

    <!-- 输入框区域 -->
    <view class="input-area">
      <view class="money">
        <view class="money-font">￥</view>
        <input type="digit" confirm-type="done" @blur="bindBlurMoney" value="{{bill.typeId === '1' ?form.money:form.getmoney}}"/>
      </view>
      <view class="remark">
        <input type="text" placeholder="备注信息:" @blur="bindBlurRemark" value="{{form.remark}}"/>
      </view>
      <view class="btns-wrap">
        <view class="btn-confirm" @tap="confirmAdd">
          <text>确定</text>
        </view>
        <view class="btn-cancel" @tap="bindToBillpage">
          <text>取消</text>
        </view>
      </view>
    </view>

    <!-- 类别图标列表 -->
    <view class="catewrap">
      <cateslide
        :list.sync="cateList"
        @selectCate.user="chooseCate"></cateslide>
    </view>

  </view>

</template>

<script>
  import wepy from 'wepy'
  import CateSlide from '@/components/bill/cateslide'
  import { log } from '@/utils/util'
  import { payCateList, incomeCateList } from '@/utils/config'
  import {isNumber} from '@/utils/util'
  import {formatTime } from '@/utils/util'

  export default class AddOne extends wepy.page {
    config = {
      navigationBarTitleText: '记账'
    }

    data = {
      mount:'',     
      cateList: payCateList,
      bill: {
        typeId: '1'
      },
      form: {
        cateType: '',
        cateId: '',
        money:null,
        getmoney:null,
        remark: '',
        getDate:'',
        title:''
      }
    }

    components = {
      cateslide: CateSlide
    }

    methods = {
      // 切换记账方式
      toggleType(t) {
        if (t === '1' && this.bill.typeId === '2') {
          this.bill.typeId = t
          this.cateList = payCateList
          this.form.cateType = ''
          this.form.cateId = ''
          this.form.getmoney = null
        } else if (t === '2' && this.bill.typeId === '1') {
          this.bill.typeId = t
          this.cateList = incomeCateList
          this.form.cateType = ''
          this.form.cateId = ''
          this.form.money = null
        }
      },

      // 选择收入或支出类别
      chooseCate(type, id,title) {
        log('type', type)
        log('id', id)
        this.form.cateType = type
        this.form.cateId = id
        this.form.title = title
      },

      // 输入金额变化得到值
      bindInputMoney(e) {

      },

      bindBlurMoney(e) {
        let val = e.detail.value.trim()
        this.mount = val
        if(this.bill.typeId === '1') this.form.money = val
        if(this.bill.typeId === '2') this.form.getmoney = val
      },

      bindBlurRemark(e) {
        let val = e.detail.value.trim()
        if (val !== '') {
          val = val.replace(/<\/?[^>]*>/g, '')
        }
        this.form.remark = val
      },

      // 确认记账
      confirmAdd() {      
        if(!parseFloat(this.mount)||!isNumber(this.mount)){
            this.methods.showTitle('请输入正确金额')            
            return
        }        
        if (parseFloat(this.mount) <= 0) {
          // 提示金额不能为0
          let titel = this.bill.typeId === '1' ? '没花钱不能记哦' : '没收钱不能记哦'
          this.methods.showTitle(titel)
          return
        }
        if(!this.form.cateType){
          this.methods.showTitle('不要忘记消费类别')
          return          
        }               
        // 发送Post请求记录
        let getForm = []
        if(this.bill.typeId === '1') this.form.money = parseFloat(this.mount)
        if(this.bill.typeId === '2') this.form.getmoney = parseFloat(this.mount)
        this.form.getDate = formatTime(new Date()).slice(0, 3)
        getForm.push(this.form)
        let self = this
        try {
          var res = wx.getStorageSync('payList')               
          if(res){
            res.push(this.form)
            wx.setStorage({
              key:'payList',
              data:res
            })
            this.methods.showTitle('已保存这笔啦')            
            this.methods.resetData.call(this)            
          }else{
            wx.setStorage({
              key:'payList',
              data:getForm
            })
            this.methods.showTitle('已保存这笔啦')
            this.methods.resetData.call(this)            
          };                
          self.$apply()
        } catch (e) {
          this.methods.showTitle('程序出错啦')
        }
      },

      // 取消 返回账本页
      bindToBillpage() {
        this.$switch('../bill')
      },
      showTitle(title){
          wx.showToast({
            title: title,
            icon: 'none'
          })
      },
      resetData(){
        for(var i in this.form){
          if(this.form[i]) this.form[i] = '';
        }        
      }
    }

    onLoad() {}
  }
</script>

<style lang="less" scoped>
  .money{
    position:relative
  }
  .money-font{
    position:absolute;
    top:18rpx;
    left:10rpx;
    font-size:70rpx
  }
  .money input{
    text-ident:10rpx
  }
  .wrap{
    position: relative;
    height: 100%;
    background-color: #fff;
  }
  .typewrap{
    padding: 30rpx 0;
  }
  .typebar{
    display: flex;
    width: 50%;
    margin: 0 auto;
    height: 60rpx;
    view{
      width: 50%;
      line-height: 60rpx;
      text-align: center;
      font-size: 28rpx;
      background-color: #fff;
      transition: background-color .3s;
      box-sizing: border-box;
      border: 2rpx solid #138cff;
      text{
        color: #138cff;
      }
    }
    view:first-child{
      border-top-left-radius: 6rpx;
      border-bottom-left-radius: 6rpx;
    }
    view:last-child{
      border-top-right-radius: 6rpx;
      border-bottom-right-radius: 6rpx;
    }
    .active{
      background-color: #138cff;
      text{
        color: #fff;
      }
    }
  }
  .input-area{
    padding: 0 50rpx;
    margin-bottom: 30rpx;
    border-bottom: 6rpx solid #138cff;
  }
  .money{
    padding-bottom: 6rpx;
    border-bottom: 1rpx solid #f3f3f3;
    input{
      height: 120rpx;
      line-height: 120rpx;
      font-size: 70rpx;
      padding-left:70rpx
    }
  }
  .remark{
    padding-bottom: 6rpx;
    border-bottom: 1rpx solid #f3f3f3;
    input{
      height: 70rpx;
      line-height: 70rpx;
      font-size: 30rpx;
    }
  }

  .btns-wrap{
    display: flex;
  }

  .btn-confirm, .btn-cancel{
    margin: 30rpx 0;
    width: 150rpx;
    height: 60rpx;
    line-height: 60rpx;
    text-align: center;
    border-radius: 4rpx;
    text{
      font-size: 26rpx;
    }
  }
  .btn-confirm{
    margin-right: 30rpx;
    background-color: #138cff;
    color: #fff;
  }
  .btn-cancel{
    background-color: #f8f8f8;
  }
</style>
