<template>
  <view class="wrap">
    <canvas canvas-id="shareCanvas" style="width:750rpx;height:940rpx"></canvas>
    <button class='more' bindtap='save' type='primary' size='mini'>保存图片</button>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { formatTime } from '@/utils/util'

  export default class Share extends wepy.page {
    config = {
      navigationBarTitleText: '测试实验室'
    }

    data = {
        screenWidth:{},
        saveImgPath:'',
        userInfo:{},
        NUMBER_OF_LINE:15,
        FONT_WIDTH:20,
        content:''
    }
    methods = {
        startDraw(text,line,ctx,that,size) {
            // 如果line > 3，则忽略
            // 因为line从0开始
            // 如果最后一行，并且文字还是那么多，那么就省略号代替
            if (line === 6 && text.length === that.NUMBER_OF_LINE) {
            text = text.slice(0, 13) + '..';
            } else if (line > 6) {
             return;
            }
            var y = 220 + (line * 20); // 200为文字初始y坐标
            ctx.setFontSize(16);
            ctx.setTextAlign('center');
            ctx.setFillStyle('#333333');
            for (var i in text) {
            var t = text[i];
            // 开始绘制
            ctx.fillText(t, size.w*0.11 + (i * that.FONT_WIDTH), y);
            ctx.stroke();
            }
        },
        setCanvasSize(){
            var size = {};
            try {
            var res = wx.getSystemInfoSync();
            var scale = 750;//画布宽度
            var scaleH = 940 / 750;//生成图片的宽高比例
            var width = res.windowWidth;//画布宽度
            var height = res.windowWidth * scaleH;//画布的高度
            size.w = width;
            size.h = height;
            } catch (e) {
                console.log("获取设备信息失败" + e);
            }
            this.screenWidth = size
            this.$apply()
        },
        settextFir(context,size){
            let that = this;
            var textFir = "今日星运";
            context.setFontSize(14);
            context.setTextAlign("center");
            context.setFillStyle("#fee6b5");
            // context.setFillStyle("#999");
            context.fillText(textFir, size.w / 2, size.h * 0.18);
            context.stroke();
        },
        settextSec(context,size){
            let that = this;
            var textSec = "长按识别小程序,加入吧!";
            context.setFontSize(14);
            context.setTextAlign("center");
            context.setFillStyle("#999");
            context.fillText(textSec, size.w / 2, size.h * 0.88);
            context.stroke();
        },
        saveImageToPhotosAlbum(){
            var that = this;
            //设置画板显示，才能开始绘图
            //新生成适配
            wx.showLoading({
                title: '出图中...',
            })
            var size = this.screenWidth;
            var context = wx.createCanvasContext('shareCanvas');
            //获取头像信息
            let BigBg = "../../images/share_tpl2@2x.png"
            var path = "../../images/bg1.png";
            var imageTx = wx.getStorageSync('user').avatarUrl || 'https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=2844859017,352483783&fm=27&gp=0.jpg';
            var imageEwm = "../../images/shareForsm.png";
            var imageZw = "../../images/zw.jpg";
            wx.getImageInfo({
                src:imageTx,
                success(res){
                    //处理图片
                    console.log(size)
                    context.drawImage(BigBg, 0, 0, size.w, size.h);
                    context.drawImage(path, 0, 0, size.w, size.h);                    
                    context.drawImage(imageEwm, size.w / 2 - 33, size.h * 0.79, size.w * 0.18, size.w * 0.18);                    
                    that.methods.settextFir(context,size);
                    let dates =  formatTime(new Date())
                    // 日
                    context.setFontSize(90);
                    context.setTextAlign('center');
                    context.setFillStyle('#666666');
                    context.fillText(dates[2], size.w/2, size.h * 0.35);
                    // 月
                    context.setFontSize(18);
                    context.setTextAlign('center');
                    context.setFillStyle('#999999');
                    context.fillText(dates[1] + ' / ' + dates[0], size.w/2, size.h * 0.41);
                    context.stroke();
                    //画文章
                          // 1. 进行分割，获取前三行
                    let str = that.content || '天了噜，暂无星运测算'
                    var c_temps = [];
                    var n = 15;
                    for (var i = 0, l = str.length; i < l/n; i++) {
                        let a = str.slice(n*i, n*(i+1));
                        c_temps.push(a);
                    }
                    var line_counts = 0;
                    // 如果超过三行，那么只取前三行
                    if (c_temps.length > 7) {
                        c_temps = c_temps.slice(0, 7);
                    }
                    for (var i in c_temps) {
                        var c_data = c_temps[i];
                        // 计算要换多少行
                        var c_lines = parseInt(c_data.length / that.NUMBER_OF_LINE);
                        if(i==c_temps.length-1&&c_lines==0) c_lines = 1
                        for (var j = 0; j < c_lines; j++) {
                            console.log(line_counts,c_temps.length,c_lines)
                            that.methods.startDraw(c_data.slice(j * that.NUMBER_OF_LINE, (j + 1) * that.NUMBER_OF_LINE), line_counts,context,that,size);
                            line_counts++;
                        }
                    }
                    //画文章end
                    // that.methods.settextSec(context,size);
                    //测试圆形
                    context.save() //保存之前操作
                    var r = size.w * 0.14/2
                    var cx = size.w / 2 - 25 + r
                    var cy = size.h * 0.02 + r
                    context.arc(cx, cy, r, 0, 2 * Math.PI)
                    context.clip()                    
                    context.drawImage(res.path, size.w / 2 - 25, size.h * 0.02, size.w * 0.14, size.w * 0.14);
                    context.restore() //还原画布坐标等
                    //圆形图片可行
                    // var cy1 = size.h * 0.68 + r
                    // context.arc(cx, cy1, r, 0, 2 * Math.PI)
                    // context.clip()
                    // context.drawImage(imageZw, size.w / 2 - 25, size.h * 0.68, size.w * 0.14, size.w * 0.14);
                    //把画板内容绘制成图片，并回调 画板图片路径
                    context.draw(false, function () {
                        wx.canvasToTempFilePath({
                            canvasId: 'shareCanvas',
                            success: function (res) {
                                wx.hideLoading()
                                if (!res.tempFilePath) {
                                    wx.showModal({
                                        title: '提示',
                                        content: '图片绘制中，请稍后重试',
                                        showCancel: false
                                    })
                                }
                                that.saveImgPath = res.tempFilePath
                                that.$apply()
                            },
                            fail(err){
                                wx.hideLoading()
                            }
                        })
                    });
                    //处理end
                }
            })
            
        },
        save(){
            wx.showLoading({
                title: '保存中...',
            })
            //画板路径保存成功后，调用方法吧图片保存到用户相册
            wx.saveImageToPhotosAlbum({
                filePath: this.saveImgPath,
                //保存成功失败之后，都要隐藏画板，否则影响界面显示。
                success: (res) => {
                    wx.hideLoading()
                },
                fail: (err) => {
                    wx.hideLoading()
                }
            })
        }
    }
    onLoad(options) {
        this.content = options.content
        //获取用户设备信息，屏幕宽度
        this.methods.setCanvasSize.call(this)
        this.methods.saveImageToPhotosAlbum.call(this)        
    }

    onShow(){}
  }
</script>

<style lang="less" scoped>
.wrap{
    text-align:center
}
.more{
    margin-top:20rpx
}
</style>
