<template>
<view class="container">
  <view class="card_wrap">
    <view bindtouchend="slidethis" animation="{{ animationlist[id] }}" class="card_item card{{ id + 1 }} zindex{{ zindex[(2-id)] }} " wx:for="{{ cardInfoList }}"  wx:key="unique" wx:for-index="id" wx:for-item="item">
      <span class="change_icon" bindtap="slidethis">
        <image src="../images/changeicon.png"></image>
      </span>
      <view class="card_info">
        <blockquote class="card_info_mes_title">{{ item.cardInfo.cardTitle }}</blockquote>
        <span class="card_info_mes_item font-light content3" wx:for="{{item.cardInfo.cardInfoMes }}"  wx:key="unique2" wx:for-index="idx" wx:for-item="cradMes"  style="margin-top: {{  idx === 0 ? 15 : 0 }}px;">
          {{ cradMes }}
        </span>
        <!-- <span class="card_info_mes_item">一月两送，有趣节日送奇异花</span>
        <span class="card_info_mes_item">一月四送，有你在每天都是最好的节日</span> -->
      </view>
      <view class="btn-cta buy_btn" id="{{ id }}"   @tap="bindDoPlan({{ item.id }}, {{ item.cardInfo.cardTitle }},{{item.times}},{{item.hours}})">开始执行</view>
      <text class="method_time">执行{{item.times}}次,执行时间{{item.hours}}小时</text>
      <image src="{{ item.cardUrl }}"></image>
    </view>
  </view>
</view>
</template>

<script>
  import wepy from 'wepy'
  import {formatTime} from '../utils/util'

  export default class Ranking extends wepy.page {
    config = {
      navigationBarTitleText: '计划'
    }

    data = {
    animationlist: [],
    isAnimation: false,
    zindex: [
      1, 2, 3
    ],
    animationlistyet: [],
    cardInfoList: [
      {
        id: 0,
        cardUrl: '../images/read.jpg',
        cardInfo: {
          cardTitle: '阅读',
          cardInfoMes: ['书籍并不是没有生命的东西', '它像一个宝瓶', '创建于2018年2月24日']
        },
        times:0,
        hours:0
      }, {
        id: 1,
        cardUrl: '../images/sport.jpg',
        cardInfo: {
          cardTitle: '运动',
          cardInfoMes: ['每天至少运动三十分钟', '动起来吧', '创建于2018年2月24日']
        },
        times:0,
        hours:0
      }, {
        id: 2,
        cardUrl: '../images/learning.jpg',
        cardInfo: {
          cardTitle: '学习',
          cardInfoMes: ['学习使人进步', '早日成为生活的王者', '创建于2018年2月24日']
        },
        times:0,
        hours:0
      }
    ]
  }

    methods = {
      slidethis: function (e) {
        let self = this;
        if (this.isAnimation || e.target.id !=='') return
        this.isAnimation = true
        this.$apply()
        //添加动画
        let animation1 = wx.createAnimation({duration: 100, timingFunction: 'cubic-bezier(.8,.2,.1,0.8)'});
        this.animation1 = animation1;
        this.animation1.translateY(28).translateX(51).rotate(0).scale(1).step();
        let animation2 = wx.createAnimation({duration: 100, timingFunction: 'cubic-bezier(.8,.2,.1,0.8)'});

        this.animation2 = animation2;
        this.animation2.translateY(62).translateX(25).rotate(0).step();
        let animation3 = wx.createAnimation({duration: 100, timingFunction: 'cubic-bezier(.8,.2,.1,0.8)'});

        this.animation3 = animation3;
        this.animation3.translateY(44).translateX(41).rotate(0).step();

        if (this.animationlistyet.length <= 0) {
          this.animationlistyet = [
            this.animation1.export(),
            this.animation2.export(),
            this.animation3.export()
          ];
        }
        this.$apply()

        this.animationlist = this.animationlistyet
        this.$apply()
        //切换动画
        let animation = self.data.animationlistyet.pop();
        self.animationlistyet.unshift(animation);
        self.animationlist = []
        self.$apply()

        setTimeout(function () {
          var zindex = self.data.zindex;
          var slidethis = self
            .data
            .zindex
            .shift();
          self
            .data
            .zindex
            .push(slidethis);
          self.isAnimation = false
          self.$apply()
        }, 100);
      },

      bindDoPlan(id, title,times,hours) {
        console.log(id,title,times,hours)     
        if (id===''||!title) return
        // 跳转至计时器界面
        this.$navigate('./plan/clock', { planId: id, planTitle: title,planTimes:times,planHours:hours })
      }
    }

    onLoad(){
      let that = this
      let res = wx.getStorageSync('onTimes')
      try{
        //图片加载慢
        wx.showLoading({
          title: '初始化',
        })
        if(!res){
          wx.setStorage({
          key:'onTimes',
          data:formatTime(new Date()).slice(0, 3).join('-')
        })
          that.cardInfoList.map((v) => v.cardInfo.cardInfoMes[2] = `创建于${formatTime(new Date()).slice(0, 3).join('-')}`)
        }else{
          that.cardInfoList.map((v) => v.cardInfo.cardInfoMes[2] = `创建于${res}`)
        }
      }finally{
        that.$apply()
        setTimeout(function(){
          wx.hideLoading()
        },500)
      }

            
    }

    onShow(){
      let res = wx.getStorageSync('setTime')
      if(res){
        res.map((val,index)=>{
          if(val){
            this.cardInfoList[val.id].times = val.times
            this.cardInfoList[val.id].hours = val.hours
          }
        })
      }
    }

  }
</script>

<style lang="less" scoped>
.method_time{
  position:absolute;
  bottom:20px;
  font-size:24rpx;
  color:#666;
  left:50%;
  transform:translate(-50%);
  background-color:rgba(255,255,255,0.8)
}
.font-p {
  font-size: 13px;
  line-height: 18px;
}
.m-top-10 {
  margin-top: 10px;
}

.clearfix::after {
  content: '';
  clear: both;
}

.clearfix::before {
  clear: both;
  content: '';
}

.col-50 {
  width: 50%;
}

.pull-left {
  float: left;
}

.pull-right {
  float: right;
}

.text-right {
  text-align: right;
}

.text-left {
  text-align: left;
}

.p-l-10 {
  padding-left: 10px;
}

.p-r-10 {
  padding-right: 10px;
}

.text-center {
  text-align: center;
}

.text-green {
  color: #00c9a9;
}

.inline-block {
  display: inline-block;
}

.btn-sku .tip {
  font-size: 9px;
  color: #00c9a9;
}

.btn-sku.active {
  border-color: #00c9a9;
  color: #00c9a9;
}

.m-top-3 {
  margin-top: 3px;
}

.m-top-7 {
  margin-top: 7px;
}

.m-top-10 {
  margin-top: 10px;
}

.m-top-20 {
  margin-top: 20px;
}


.m-b-6 {
  margin-bottom: 6px;
}

.m-top-12 {
  margin-top: 12px;
}

.m-b-12 {
  margin-bottom: 12px;
}

.m-b-17 {
  margin-bottom: 17px;
}

.zindex1 {
  z-index: 1;
}

.zindex2 {
  z-index: 2;
}

.zindex3 {
  z-index: 3;
}
.checkbox {
  height: 25px;
}

.switch {
  height: 25px;
}
 .card_wrap {
  background: #f2f2f6;
  position: relative;
  width: 100%;
  height: 100%
}
.card_wrap .card_item {
  position: absolute;
  width: 80%;
  height:702rpx;
  background:#f6f6f6
}
.card_wrap .card_item .buy_btn {
  position: absolute;
  bottom: 43px;
  left: 50%;
  transform:translateX(-50%);
  background-color:rgba(32,178,170,1);
  border-radius:0 25rpx;
  padding: 8rpx;
  color:#fff
}
.card_wrap .card_item span.change_icon image {
  position: absolute;
  width: 35px;
  height: 11px;
  top: 14px;
  left: 50%;
  margin-left: -17px;
  box-shadow:none;

}
.card_wrap .card_item .card_info {
  position: absolute;
  height: 94px;
  width: 80%;
  border: 1px #E3E3E3 solid;
  border-top-width: 0;
}
.card_wrap .card_item .card_info .card_info_mes_title {
  font-size: 18px;
  line-height: 24px;
  margin-left: 28px;
  position: absolute;
  top: -12px;
  background-color:rgba(255,255,255,0.8)
}
.card_wrap .card_item .card_info .card_info_mes_item {
  margin-left: 28px;
  display: block;
  font-size: 12px;
  line-height: 24px;
}


.card_wrap .card_item.card1 {
  /*top: 62px;
  left: 25px;*/
  transform: translateY(146rpx) translateX(58rpx);
  /*z-index: 3*/
}
.card_wrap .card_item.card1 .card_info {
  top: 280rpx;
  left: 48rpx;
  background-color:rgba(255,255,255,0.8)
}
.card_wrap .card_item.card2 {
  transform: translateY(104rpx) translateX(96rpx);
}
.card_wrap .card_item.card2 .card_info {
  top: 300rpx;
  left: 34rpx;
  border-color: #fff;
  background-color:rgba(255,255,255,0.8)
}

.card_wrap .card_item.card3 {
  /*top: 28px;
  left: 51px;*/
  transform: translateY(66rpx) translateX(120rpx);
  /*z-index: 1;*/
}

.card_wrap .card_item.card3 .card_info {
  top: 172rpx;
  left: 78rpx;
  border-color: #fff;
  background-color:rgba(255,255,255,0.8)
}
.card_wrap .card_item image {
  display: block;
  width: 100%;
  height: 702rpx;
  border-radius: 6px;
  box-shadow: 6px 23px 50px 10px #ccc;
}
</style>